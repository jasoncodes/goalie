<%
  traces = [
    ["Application Trace", @application_trace],
    ["Framework Trace", @framework_trace],
    ["Full Trace", @full_trace]
  ]
  names = traces.collect {|name, trace| name}

  targets = @exception.backtrace.map do |line|
    line =~ /^(.+):(\d+):in/ && "txmt://open?url=file://#{$1}&line=#{$2}&column=1"
  end
  targets = Hash[@full_trace.zip(targets)]
%>

<p><code>Rails.root: <%= defined?(Rails) && Rails.respond_to?(:root) ? Rails.root : "unset" %></code></p>

<div id="traces">
  <% names.each do |name| %>
    <%
      show = "document.getElementById('#{name.gsub /\s/, '-'}').style.display='block';"
      hide = (names - [name]).collect {|hide_name| "document.getElementById('#{hide_name.gsub /\s/, '-'}').style.display='none';"}
    %>
    <a href="#" onclick="<%= hide.join %><%= show %>; return false;"><%= name %></a> <%= '|' unless names.last == name %>
  <% end %>

  <% traces.each do |name, trace| %>
    <div id="<%= name.gsub /\s/, '-' %>" style="display: <%= name == "Application Trace" ? 'block' : 'none' %>;">
      <pre><code><%
        trace.each do |line|
          if target = targets[line]
            safe_concat link_to(line, target)
          else
            safe_concat line
          end
          safe_concat "\n"
        end
      %></code></pre>
    </div>
  <% end %>
</div>
